version: '3'

services:
    server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/server-entrypoint.sh
        volumes:
            - static_volume:/app/notification_server/django_static
        ports:
            - "8000:8000"
        env_file:
            - '.env'
        depends_on:
            - db
            - redis
    worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/worker-entrypoint.sh
        volumes:
            - static_volume:/app/notification_server/django_static
        env_file:
            - '.env'
        depends_on:
            - db
            - redis
    beat:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/beat-entrypoint.sh
        volumes:
            - static_volume:/app/notification_server/django_static
        env_file:
            - '.env'
        depends_on:
            - db
            - redis
    redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine
        expose:
            - 6379

    db:
        image: postgres:13.0-alpine
        restart: unless-stopped
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        expose:
            - 5432

        container_name: db
#
volumes:
    static_volume: {}
    postgres_data: {}